<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Loading annoted beans -->
	<context:component-scan base-package="com.lti"></context:component-scan>
	

	<!-- DataSource configuration -->
	<bean id="ds1"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="Newuser123" />
	</bean>

	<!-- <bean id="ds2" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" /> <property 
		name="url" value="jdbc:mysql://localhost/test" /> <property name="username" 
		value="root" /> <property name="password" value="mnrpass" /> </bean> -->


	<!-- This bean will create the EntityManagerFactory object for us no need 
		of META-INF/persistence.xml as all the settings required for Hibernate or 
		any other ORM will be done here itself -->
	<bean id="myEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> <!-- This class will create object for us for hibernate -->
		<property name="dataSource" ref="ds1" /> <!-- To tell hibernate which to which database we are referring -->
		<property name="packagesToScan" value="com.lti.entity" /> <!-- Location of @Entity classes -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>	<!-- does not create new table just update -->
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

<!--for @Trasactional  -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEmf" />
	</bean>
	<tx:annotation-driven />

</beans>
